X X X X X X X X X X X X X X X X X X X X X X X X X 
X . . X X . . . X . X . . . . A . . . X . X . X X 
X X . . X X X . X . X X X X X X X . X X . X . . X 
X X . X X . . . X . X X X . X . X . X X . X . X X 
X . . . X X X . . . . . X . . . . . X X . X . . X 
X X . X X X X X X X X . X X X X X . . . . X . X X 
X . . X X . X X . . . . . . . . X X X X . X . . X 
X X . . X . . X . X X X X X . X X . . . . . . X X 
X . . X X . X X X X . . . . . . X X X X X X . . X 
X X . . X . . . . X X X X X X . . X . . . X . X X 
X X X . X . X X X X . . . X X X . . . X . . . . X 
X . . . . . . . X . . X . . . . . X . X X X . X X 
X X . X X X X . . . X X X . X . X X . X . . . . X 
X . . X . . . . X . X . . . X . X . . X X . X . X 
X . X X X . X . X X X . X . X X X X . X . . X . X 
X . X . . . X X X . . . X . X . . . . X X . X . X 
X X X X X . X . . . X . X . X X . X . X . . X X X 
X X . . . . X X X . X . X X X X . X . X X . . X X 
X . . X X . X X . . X X X X . . . X . X X X . . X 
X . X X . . X X X . X X X . . X . X . X . . . X X 
X . X X X X X . X . X . . . X X X X . X X X . X X 
X . X . . . . . . . X X . X X . . . . X . . . . X 
X . X X X X X . X . X X . . X X X . X X . X . X X 
X . . X X . . . X . . X X . X . . . X X . X . . X 
X X X X X X X X X X X X X X X X X X X X X X X O X 

{'maze_width': 25, 'maze_height': 25, 'size': 25, 'has_treasure': False, 'treasure_found': 0, 'treasure_left': 0, 'treasure_map': [], 'position_agent': (1, 15), 'position_entrance': (1, 15), 'position_exit': (24, 23), 'maze': array([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1],
       [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 1,
        0, 1, 1],
       [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,
        0, 0, 1],
       [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1,
        0, 1, 1],
       [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1,
        0, 0, 1],
       [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1,
        0, 1, 1],
       [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1,
        0, 0, 1],
       [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0,
        0, 1, 1],
       [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1,
        0, 0, 1],
       [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1,
        0, 1, 1],
       [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0,
        0, 0, 1],
       [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1,
        0, 1, 1],
       [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0,
        0, 0, 1],
       [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0,
        1, 0, 1],
       [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0,
        1, 0, 1],
       [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0,
        1, 0, 1],
       [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0,
        1, 1, 1],
       [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,
        0, 1, 1],
       [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1,
        0, 0, 1],
       [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0,
        0, 1, 1],
       [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1,
        0, 1, 1],
       [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0,
        0, 0, 1],
       [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1,
        0, 1, 1],
       [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1,
        0, 0, 1],
       [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 3, 1]]), 'generation_start_coords': (10, 22), 'generation_start_neighbours': [], 'turns_elapsed': 0, 'done': False, 'coord_to_index_state': array([[171, 209, 169, 201, 322,  12, 225, 473, 396, 521, 271, 279, 484,
        482, 382, 564,  51,  29, 196, 329, 219, 250, 343, 480, 395],
       [ 10, 236, 485, 297, 282, 358, 136, 352, 510, 251,  56, 427, 294,
        402, 187, 304, 459, 373, 540, 422, 533, 419, 224, 128, 243],
       [568, 398, 157, 318, 299,  82, 312, 554,   5, 442,  50, 552, 604,
        163, 137,  60, 286,  75,  95, 559,  72, 132, 563, 365,  61],
       [508, 203, 107, 181, 580,  73,  18, 471, 479,  77, 499, 323, 391,
        274, 327, 601, 144, 295, 371, 589, 357, 447,  21, 130,  43],
       [416, 342, 535, 505, 441, 498, 315, 558, 394, 469, 436,  83, 550,
        451,  30, 423, 210, 532,  65, 226, 366,  26, 503, 617, 553],
       [ 70, 344, 494,   3, 192, 488,  91,  23, 269, 121, 369,  69, 147,
        418,  94, 375, 256,   1, 381, 404, 266, 597,  14, 211, 182],
       [516, 270, 331,  62, 606, 320, 578, 288, 465, 292, 338, 500, 340,
        426, 420, 183, 374, 401,  90, 249, 255, 421, 247,   0, 179],
       [551,  93, 167,  97, 622, 142, 123, 287, 216, 347, 478, 245, 443,
        308, 172, 208, 400, 388, 116, 417, 222, 156, 490, 360, 290],
       [120,  28, 385, 571,  48, 214, 246, 117, 215, 189,  53, 430, 199,
        425,  35, 264, 623, 561, 406,  63,  22, 544, 105, 543, 411],
       [145, 206, 464, 466, 556, 414, 135, 228, 112, 432, 316, 524, 278,
        306, 341, 291, 424, 263, 140, 367, 359, 254, 275, 260, 389],
       [309, 407, 188, 534, 158, 514,  88, 330, 268, 231, 493, 174, 152,
        615, 545,  15, 594,  85, 444, 528, 456, 103, 399, 100, 520],
       [525, 173, 605, 616, 433, 461, 582, 200, 413, 555, 452, 355, 133,
        380,  57, 376, 569, 258, 497, 486, 348, 592, 122, 314, 138],
       [ 45, 328, 429,  36, 613, 238, 546, 261, 445, 624, 567, 519, 585,
        124, 363, 233,  86, 289, 446, 111, 230, 168, 202, 223, 621],
       [257, 440, 148, 611, 125, 221, 599, 109, 595, 501, 502,  34,  42,
        234, 603, 332, 517,  98,  19,  41, 220, 184, 463,  99, 296],
       [191,  80, 139, 598, 159, 324, 195, 150,  33, 276,  37, 164, 390,
        118, 351, 165,  68,   2, 462, 259,  55,  71, 548, 541, 321],
       [ 49, 575, 354,  17,  59, 587, 438,  64, 531, 387, 217, 583, 253,
        590, 267, 244, 143, 198, 565, 481, 483, 403, 566, 511, 620],
       [361, 104,  32, 149,   6, 472, 126, 141, 368, 284,  25, 185, 155,
         20,  24,  96, 154, 439, 131, 190, 607, 397, 600, 487, 526],
       [339, 504, 161,  78, 307, 539, 110, 153, 408, 536, 435, 349, 175,
        303, 285,  13, 458, 227, 207, 434, 523,  46, 495, 415, 301],
       [280,   7,  39, 119, 602, 218, 609, 596, 610, 449, 618, 177, 248,
        129, 186, 229, 170, 281, 549, 460, 506, 409, 379, 325, 384],
       [193,  87, 619, 579, 467, 431, 509, 283, 265,  89, 537, 455, 410,
        542, 252, 180, 412, 468, 437, 101, 377, 362,   4, 242, 474],
       [ 44, 300, 586, 237, 405, 591, 108, 333, 106, 593, 588, 529, 212,
        378, 240,   9, 336, 573,  79, 428, 527, 239,  27, 450, 205],
       [ 38, 489, 194, 134,   8, 151,  52, 277, 513,  84,  40, 162, 372,
        477,  47, 353, 557, 305,  74, 577, 476, 127, 574,  66, 383],
       [273, 393, 235, 176, 581, 298, 166, 612, 364, 614, 160, 512, 576,
        392, 241,  54, 345, 370, 213, 310, 146,  16, 114, 491, 319],
       [386, 311, 197, 326, 448, 313, 492, 204, 562, 346, 113, 232, 518,
        470, 475, 538, 350, 334, 317,  11, 560, 272, 570,  76,  92],
       [262, 453, 572, 102, 115, 335, 547,  81,  67, 178, 522,  31, 496,
        302, 293, 530, 584, 507, 454, 608,  58, 356, 515, 337, 457]]), 'prob_of_slipping': [0.1, 0.1, 0.1, 0.1, 0.6]}
